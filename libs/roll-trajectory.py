import matplotlib.pyplot as plt
import numpy as np
import scipy
import json

def get_raw_blade_data(filePath: str) -> dict:
    try:
        file = open(filePath, 'r')
        try:
            return json.load(file)
        except json.decoder.JSONDecodeError as error:
            print("Decoding JSON has failed: " + str(error))  
    except OSError as error:
        print(error)

def plot(x, y, xlabel = "x", ylabel = "y"): 
    plt.plot(x, y, '-', linewidth=1)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.grid(True)
    plt.show()

def lstsq(x, y):
    x = np.array(x)
    y = np.array(y)
    A = np.vstack([x, np.ones(len(x))]).T
    k, b = np.linalg.lstsq(A, y, rcond=None)[0]
    return k*x+b

def save_blade_data(file_name):
    with open(file_name, 'w') as file:
        json.dump(profiles, file)
    file.close()

profiles = get_raw_blade_data("../blade_data.json")

z = []
for profile in profiles.values():
    z.append(profile["z"])

n = len(profiles["0"]["convex"])

for i in range(n):
    x_cx = []; y_cx = []; x_cv = []; y_cv = []
    for profile in profiles.values():
        x_cx.append(profile.get("convex")[i][0])
        y_cx.append(profile.get("convex")[i][1])
        x_cv.append(profile.get("concave")[i][0])
        y_cv.append(profile.get("concave")[i][1])
    x_cx1 = lstsq(z, x_cx)
    y_cx1 = lstsq(z, y_cx)
    x_cv1 = lstsq(z, x_cv)
    y_cv1 = lstsq(z, y_cv)
    for (profile, x1, y1, x2, y2) in zip(profiles.values(), x_cx1, y_cx1, x_cv1, y_cv1):
        profile["convex"][i][0] = x1
        profile["convex"][i][1] = y1
        profile["concave"][i][0] = x2
        profile["concave"][i][1] = y2

# save_blade_data("new_blade_data.json")

# spl = scipy.interpolate.CubicSpline(x, y)
# x = np.linspace(min(x), max(x), num = 50)
# plot(x, spl(x))


""" a = -2.05915523e-08 
b = -7.53749861e-02 
c = 6.34916362e+00

x = np.arange(10)

plot(x, a*x**2 + b*x + c) """


z = [137.6999969482422, 136.69158935546875, 135.68319702148438, 134.67478942871094, 133.6663818359375, 132.65798950195312, 131.6495819091797, 130.64117431640625, 129.6327667236328, 128.62437438964844, 127.615966796875, 126.6075668334961, 125.59915924072266, 124.59075927734375, 123.58235168457031, 122.5739517211914, 121.56554412841797, 120.55714416503906, 119.54873657226562, 118.54033660888672, 117.53192901611328, 116.52352905273438, 115.51512908935547, 114.50672149658203, 113.49832153320312, 112.48991394042969, 111.48151397705078, 110.47310638427734, 109.46470642089844, 108.456298828125, 107.4478988647461, 106.43949890136719, 105.43109130859375, 104.42269134521484, 103.4142837524414, 102.4058837890625, 101.39747619628906, 100.38907623291016, 99.38066864013672, 98.37226867675781, 97.3638687133789, 96.35546112060547, 95.34706115722656, 94.33865356445312, 93.33025360107422, 92.32184600830078, 91.31344604492188, 90.30503845214844, 89.29663848876953, 88.28823852539062, 87.27983093261719, 86.27143096923828, 85.26302337646484, 84.25462341308594, 83.2462158203125, 82.2378158569336, 81.22940826416016, 80.22100830078125, 79.21260833740234, 78.2042007446289, 77.19580078125, 76.18739318847656, 75.17899322509766, 74.17058563232422, 73.16218566894531, 72.15377807617188, 71.14537811279297, 70.13697814941406, 69.12857055664062, 68.12017059326172, 67.11176300048828, 66.10336303710938, 65.09495544433594, 64.08655548095703, 63.07815170288086, 62.06974792480469, 61.061344146728516, 60.052940368652344, 59.04453659057617, 58.0361328125, 57.027732849121094, 56.01932907104492, 55.01092529296875, 54.00252151489258, 52.994117736816406, 51.985713958740234, 50.97731018066406, 49.96890640258789, 48.96050262451172, 47.95210266113281, 46.94369888305664, 45.93529510498047, 44.9268913269043, 43.918487548828125, 42.91008377075195, 41.90167999267578, 40.89327621459961, 39.88487243652344, 38.87647247314453, 37.86806869506836, 36.85966491699219, 35.851261138916016, 34.842857360839844, 33.83445358276367, 32.8260498046875, 31.81764793395996, 30.80924415588379, 29.800840377807617, 28.792436599731445, 27.784032821655273, 26.775630950927734, 25.767227172851562, 24.75882339477539, 23.75041961669922, 22.74201774597168, 21.733613967895508, 20.725210189819336, 19.716806411743164, 18.708402633666992]
x = [-16.60723876953125, -16.59464454650879, -16.582050323486328, -16.569454193115234, -16.556859970092773, -16.544265747070312, -16.53166961669922, -16.519075393676758, -16.506481170654297, -16.493886947631836, -16.481290817260742, -16.46869659423828, -16.45610237121582, -16.443506240844727, -16.430912017822266, -16.418317794799805, -16.405723571777344, -16.39312744140625, -16.38053321838379, -16.367938995361328, -16.355342864990234, -16.342748641967773, -16.330154418945312, -16.31756019592285, -16.304964065551758, -16.292369842529297, -16.279775619506836, -16.267179489135742, -16.25458526611328, -16.24199104309082, -16.22939682006836, -16.216800689697266, -16.204206466674805, -16.191612243652344, -16.17901611328125, -16.16642189025879, -16.153827667236328, -16.141233444213867, -16.128637313842773, -16.116043090820312, -16.10344886779785, -16.09085464477539, -16.078258514404297, -16.065664291381836, -16.053070068359375, -16.04047393798828, -16.02787971496582, -16.01528549194336, -16.0026912689209, -15.990096092224121, -15.977500915527344, -15.964905738830566, -15.952311515808105, -15.939716339111328, -15.927122116088867, -15.91452693939209, -15.901932716369629, -15.889337539672852, -15.87674331665039, -15.864148139953613, -15.851552963256836, -15.838958740234375, -15.826363563537598, -15.813769340515137, -15.80117416381836, -15.788579940795898, -15.775984764099121, -15.763389587402344, -15.750795364379883, -15.738200187683105, -15.725605964660645, -15.713010787963867, -15.700416564941406, -15.687821388244629, -15.675226211547852, -15.66263198852539, -15.650036811828613, -15.637442588806152, -15.624847412109375, -15.612253189086914, -15.599658012390137, -15.587063789367676, -15.574468612670898, -15.561873435974121, -15.54927921295166, -15.536684036254883, -15.524089813232422, -15.511494636535645, -15.498900413513184, -15.486305236816406, -15.473711013793945, -15.461115837097168, -15.44852066040039, -15.43592643737793, -15.423331260681152, -15.410737037658691, -15.398141860961914, -15.385547637939453, -15.372952461242676, -15.360357284545898, -15.347763061523438, -15.33516788482666, -15.3225736618042, -15.309978485107422, -15.297384262084961, -15.284789085388184, -15.272194862365723, -15.259599685668945, -15.247004508972168, -15.234410285949707, -15.22181510925293, -15.209220886230469, -15.196625709533691, -15.18403148651123, -15.171436309814453, -15.158841133117676, -15.146246910095215, -15.133651733398438, -15.121057510375977]

plot(z,x)

""" 
for i in range(n):
    x = []
    for profile in profiles.values():
        x.append(profile.get("convex")[i][1])
    plt.plot(z, x, '-', linewidth=1)
    plt.grid(True)

plt.show() 
"""












